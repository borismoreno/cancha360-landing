---
// src/components/ui/Button.astro
interface Props {
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  disabled?: boolean;
  class?: string; // Permite pasar clases adicionales
}

const {
  href,
  type = 'button',
  variant = 'primary',
  size = 'md',
  disabled = false,
  class: className,
  ...rest // Captura otros atributos como aria-label
} = Astro.props;

const baseStyles = "inline-flex items-center justify-center font-semibold rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 transition duration-150 ease-in-out";

const variantStyles = {
  primary: "bg-green-600 text-white hover:bg-green-700 focus:ring-green-500",
  secondary: "bg-white text-green-700 hover:bg-gray-100 focus:ring-green-500",
  outline: "border border-gray-300 text-gray-700 hover:bg-gray-50 focus:ring-indigo-500", // Ajustar color
};

const sizeStyles = {
  sm: "px-3 py-1.5 text-sm",
  md: "px-4 py-2 text-base",
  lg: "px-6 py-3 text-lg",
};

const disabledStyles = "opacity-50 cursor-not-allowed";

const Tag = href ? 'a' : 'button';
---
<Tag
  href={href}
  type={!href ? type : undefined}
  class:list={[
    baseStyles,
    variantStyles[variant],
    sizeStyles[size],
    disabled ? disabledStyles : '',
    className, // Aplica clases adicionales pasadas como prop
  ]}
  disabled={disabled}
  {...rest}
>
  <slot />
</Tag>